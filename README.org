* Ox-Tailwind Export Back-End
  
This back-end has the purpose of allowing easy customization of the HTML
output. Although it is called ~Tailwind~, the only thing that it does is
allowing you to customize the classes of the HTML and exporting a more
barebones HTML (It does not create as many ~divs~ and ~sections~ as the normal
HTML export back-end).
  
Instead of using Tailwind.css you can just name the classes of the elements and
import your own css (or edit ~./css/style.css~).

**Note**: Although you can export any ~.org~ file as html by using ~C-c C-e x
h~ (through ~org-export-dispatcher~), this method won't create the file inside
the ~dist~ folder where you have all the required ~js~ and ~css~ files. If you
open this file on a browser and open the console you will notice there are
import errors. You should instead setup your notes directory with
~org-publish-project-alist~ and then ~publish~ the project using
~(org-publish-all)~ or ~(org-publish-all t)~ to forcefully publish files.

** More Themes

Check the [[https://vascoferreira25.github.io/ox-tailwind/][Light Theme]].

Check the [[https://vascoferreira25.github.io/ox-tailwind/dark.html][Dark Theme]].

Check the [[https://vascoferreira25.github.io/ox-tailwind/gitlab.html][Gitlab theme]].

** Installation
   
To install this back-end, clone this repo into your packages or private
folder in your ~~/.emacs.d~ directory:

#+begin_src shell
git clone https://github.com/vascoferreira25/ox-tailwind ~/.emacs.d/private
(out)Cloning into '~/.emacs.d/private'...
(out)remote: Enumerating objects: 49, done.
(out)remote: Counting objects: 100% (49/49), done.
(out)remote: Compressing objects: 100% (40/40), done.
(out)remote: Total 49 (delta 20), reused 28 (delta 8), pack-reused 0
(out)Unpacking objects: 100% (49/49), done.
#+end_src

And add the following to your config file:

#+ATTR_FILENAME: your_config.el
#+BEGIN_SRC elisp
;; ox-tailwind export back-end
(load "~/.emacs.d/private-packages/ox-tailwind/ox-tailwind.el")
#+END_SRC

Afterwards, copy the ~notes_example~ folder to get an already made directory
structure for your notes including all the required CSS and JS files. You just
have to setup ~org-publish-project-alist~ and then use the ~(org-publish-all)~
command and you are done. Check the ~/notes_example/index.org~ file.

If you prefer not to copy the ~/dist/~ folder and instead to generate that
folder each time you publish your files, you should create a ~/css/~, ~/js/~
and ~/mathjax/~ folders in your notes directory and setup the
~org-publish-project-alist~ to also publish these folders. Don't forget to copy
all the required files (Prism.js, TailwindCSS and MathJax) to those folders
before publishing.

** Notes structure

In order for the search bar to work, this export backend will search all ~.org~
files in the path of your project and store all the headings in a ~.js~ file.

The folder structure for your notes should be like this:

#+ATTR_FILENAME: C:/notes
  #+begin_src ps
tree /F /a
(out)C:/path/to/your_notes/
(out)|   index.org
(out)|   ... other org files
(out)|   
(out)+---files
(out)|       # Your attachments
(out)|
(out)+---img
(out)|       # Your image files
(out)|       
(out)+---dist
(out)        # Org Publish Files
  #+end_src

The home page for your notes should be ~index.org~.
  
For easier search and note management, the notes should be named as
~<subject>_<notes_name>_<guide|snippets|templates|...>.org~.

Examples:

| Notes                      | File Name                         |
|----------------------------+-----------------------------------|
| Programming Guides Index   | ~programming.org~                 |
| Python notes Index         | ~programming_python.org~          |
| Python guide               | ~programming_python_guide.org~    |
| Python snippets            | ~programming_python_snippets.org~ |
|                            |                                   |
| Guides Index               | ~guides.org~                      |
| How to manage Ebooks guide | ~guides_manage_ebooks.org~        |
|                            |                                   |
| Gaming Index               | ~gaming.org~                      |
| Skyrim guide               | ~gaming_skyrim.org~               |
|                            |                                   |
| Subjects Index             | ~subjects.org~                    |
| Mathematics                | ~subjects_mathematics.org~        |
| Economics                  | ~subjects_economics.org~          |

Index files should have the following template

#+ATTR_FILENAME: subjects.org
#+BEGIN_SRC org 
,* Subjects
,** Pages
   
[[./subjects_accounting_and_finance.org][Accounting and Finance]]

[[./subjects_computer_science.org][Computer Science]]

[[./subjects_economics.org][Economics]]

[[./subjects_elo_rating.org][Elo Rating System]]

[[./subjects_mathematics.org][Mathematics]]

[[./subjects_statistics.org][Statistics]]

,** References
#+END_SRC

** Publish settings

To setup automatic export of all my org files I use the following settings:

#+ATTR_FILENAME: your_config.el
#+BEGIN_SRC elisp
(setq org-publish-project-alist
      '(("org-files"
         :base-extension "org"
         :base-directory "V:/orgmode/"
         :publishing-directory "V:/orgmode/dist/"
         :publishing-function org-tailwind-publish-to-html)
        ("images"
         :base-directory "V:/orgmode/img/"
         :base-extension ".*"
         :publishing-directory "V:/orgmode/dist/img/"
         :publishing-function org-publish-attachment)
        ("files"
         :base-directory "V:/orgmode/files/"
         :base-extension ".*"
         :publishing-directory "V:/orgmode/dist/files/"
         :publishing-function org-publish-attachment)
        ("tangles"
         :base-directory "V:/orgmode/tangles/"
         :base-extension ".*"
         :publishing-directory "V:/orgmode/dist/tangles/"
         :publishing-function org-publish-attachment)
        ;; Publish all in one time
        ("notes" :components ("org-files" "images" "files" "tangles"))))
#+END_SRC

After setting up your notes path, you should use ~(org-publish-all)~ to publish
all the notes as html.

**Note**: Before publishing, open a buffer on one of your ~.org~ files or just
~dired~ into the notes directory. As this back-end needs to create a ~.js~ file
based on your ~.org~ files to enable searching, if the Emacs current directory
isn't in the notes directory, it will fail to create this file.

** Notes output directory
   
In order for the export to work, you need to put the required files in the
output folder. Just copy the ~/notes_example/dist~ folder into your notes
~/dist/~ folder.

This is the directory structure of the export folder:
   
#+ATTR_USERNAME: your-username
#+ATTR_HOSTNAME: your-hostname
#+ATTR_HIGHLIGHT: 3-5,15,18,20-23
#+ATTR_FILENAME: C:/notes/dist
#+begin_src ps
tree /F /a
(out)C:/path/to/your_notes/dist/
(out)|   # The HTML export
(out)|   index.html
(out)|   
(out)+---css
(out)|       prism.css
(out)|       style.css # Your css file
(out)|       tailwind.min.css
(out)|       
(out)+---files
(out)|       # Your attachments
(out)+---img
(out)|       # Your image files
(out)|       spacemacs_1.png
(out)|       spacemacs_2.png
(out)|       
(out)+---js
(out)|       clipboard.min.js
(out)|       mermaid.min.js
(out)|       polyfill.min.js
(out)|       prism.js
(out)|       tex-mml-chtml.js
(out)|       toc_tree.js
(out)|       
(out)+---mathjax
(out)        # Mathjax Files
#+end_src

** Cleaning the output folder

When publishing your org files, Org-Mode won't delete any files in the ~/dist/~
folder. If you delete org files and don't delete those files from the ~/dist/~
folder, you will end up with obsolete html files. In this case, what you should
is delete all the html files and then use ~(org-publish-all t)~ to force
publish all your org files again.

Also, if you delete images, tangles or other files from ~/your_notes/files~,
~/your_notes/tangles~ or ~/your_notes/img~ there will be a copy of them in the
~/dist/~ folder.

To completely clean the ~/dist/~ folder you can delete all the following files
and folders:

- ~/dist/files~,
- ~/dist/img~,
- ~/dist/tangles~,
- all ~.html~ files.

** Customization

To customize the theme you have to change the ~org-tailwind-class~ variables.
Bellow are two different themes:

- Dark mode,
- Gitlab alike theme.

You just have to copy-paste these settings to your config file:

- if you're using Spacemacs, copy-paste it to ~(defun dotspacemacs/user-config
  ()~ function,
- if you're using Doom, copy-paste it to the ~config.el~ file, bellow the
  import of the package.

To customize the code blocks, you can just download another theme from the
[[https://prismjs.com/download.html#themes=prism-tomorrow&languages=markup+css+clike+javascript+abap+abnf+actionscript+ada+agda+al+antlr4+apacheconf+apl+applescript+aql+arduino+arff+asciidoc+aspnet+asm6502+autohotkey+autoit+bash+basic+batch+bbcode+birb+bison+bnf+brainfuck+brightscript+bro+bsl+c+csharp+cpp+cil+clojure+cmake+coffeescript+concurnas+csp+crystal+css-extras+cypher+d+dart+dax+dhall+diff+django+dns-zone-file+docker+ebnf+editorconfig+eiffel+ejs+elixir+elm+etlua+erb+erlang+excel-formula+fsharp+factor+firestore-security-rules+flow+fortran+ftl+gml+gcode+gdscript+gedcom+gherkin+git+glsl+go+graphql+groovy+haml+handlebars+haskell+haxe+hcl+hlsl+http+hpkp+hsts+ichigojam+icon+ignore+inform7+ini+io+j+java+javadoc+javadoclike+javastacktrace+jolie+jq+jsdoc+js-extras+json+json5+jsonp+jsstacktrace+js-templates+julia+keyman+kotlin+latex+latte+less+lilypond+liquid+lisp+livescript+llvm+lolcode+lua+makefile+markdown+markup-templating+matlab+mel+mizar+mongodb+monkey+moonscript+n1ql+n4js+nand2tetris-hdl+naniscript+nasm+neon+nginx+nim+nix+nsis+objectivec+ocaml+opencl+oz+parigp+parser+pascal+pascaligo+pcaxis+peoplecode+perl+php+phpdoc+php-extras+plsql+powerquery+powershell+processing+prolog+properties+protobuf+pug+puppet+pure+purebasic+purescript+python+q+qml+qore+r+racket+jsx+tsx+reason+regex+renpy+rest+rip+roboconf+robotframework+ruby+rust+sas+sass+scss+scala+scheme+shell-session+smali+smalltalk+smarty+sml+solidity+solution-file+soy+sparql+splunk-spl+sqf+sql+stan+iecst+stylus+swift+t4-templating+t4-cs+t4-vb+tap+tcl+tt2+textile+toml+turtle+twig+typescript+typoscript+unrealscript+vala+vbnet+velocity+verilog+vhdl+vim+visual-basic+warpscript+wasm+wiki+xeora+xml-doc+xojo+xquery+yaml+yang+zig&plugins=line-highlight+line-numbers+autolinker+file-highlight+show-language+jsonp-highlight+highlight-keywords+inline-color+previewers+autoloader+keep-markup+command-line+unescaped-markup+normalize-whitespace+data-uri-highlight+toolbar+copy-to-clipboard+download-button+match-braces+diff-highlight+filter-highlight-all+treeview][Prism.js]] website and save both the ~js~ and the ~css~ file in your ~/dist~
folder.

*** Dark Theme

#+ATTR_FILENAME: your_config.el
#+BEGIN_SRC elisp
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                                       ;        org-tailwind dark mode        ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(setq org-tailwind-headlines "h1,h2,h3")

(setq org-tailwind-class-h1 "mt-32 mb-6 text-6xl text-yellow-600
border-b hover:text-green-500 border-gray-500")

(setq org-tailwind-class-h2 "mt-20 mb-6 text-5xl text-yellow-600
border-b hover:text-green-500 border-gray-500")

(setq org-tailwind-class-h3 "mt-12 mb-6 text-4xl text-yellow-600
border-b hover:text-green-500 border-gray-500")

(setq org-tailwind-class-h4 "mt-8 mb-6 text-3xl text-yellow-600
border-b hover:text-green-500 border-gray-500")

(setq org-tailwind-class-h5 "mt-6 mb-6 text-2xl text-yellow-600
border-b hover:text-green-500 border-gray-500")

(setq org-tailwind-class-h6 "mt-4 mb-6 text-xl text-yellow-600
border-b hover:text-green-500 border-gray-500")

(setq org-tailwind-class-h7 "mt-2 mb-6 text-lg text-yellow-600
border-b hover:text-green-500 border-gray-500")

(setq org-tailwind-class-h8 "mt-1 mb-6 text-base text-yellow-600
border-b hover:text-green-500 border-gray-500")

(setq org-tailwind-class-code "px-2 rounded-md text-green-600
bg-gray-900")

(setq org-tailwind-class-verbatim "px-2 rounded-md text-red-600
bg-gray-900")

(setq org-tailwind-class-body "flex flex-col h-screen
text-gray-200 bg-gray-800")

(setq org-tailwind-class-header "w-full border-b border-gray-500
bg-gray-900 shadow-md items-center h-16")

(setq org-tailwind-class-footer "fixed bottom-0 w-full border-t
border-solid border-gray-500 h-8 text-center bg-gray-900")

(setq org-tailwind-class-sidebar "px-24 py-12 bg-gray-900
lg:border-r lg:border-gray-500 lg:fixed lg:pt-2 lg:w-64 lg:px-2
lg:overflow-y-auto lg:inset-y-0 lg:mt-16 lg:mb-8")

(setq org-tailwind-class-toc-items "text-sm border-b border-l-4 \
border-gray-900 hover:border-yellow-700")

(setq org-tailwind-class-current-toc "border-yellow-700")

(setq org-tailwind-class-search-bar "float-right mx-4 w-1/6
rounded-lg px-4 py-1 border-solid border-2 border-gray-700
bg-gray-900 text-gray-700 focus:border-yellow-700
focus:text-gray-200")

(setq org-tailwind-class-search-bar-results-list "z-50 absolute
w-5/6 sm:w-4/6 md:w-3/6 lg:w-2/6 xl:w-1/6 right-0 mt-12 mr-20
bg-gray-900 p-4 shadow-lg border border-solid border-gray-500
rounded-md text-gray-200")

(setq org-tailwind-class-search-bar-results-item "p-2 block \
rounded-md hover:bg-yellow-700")

(setq org-tailwind-class-blockquote "my-2 mx-20 px-4 border-l-8
rounded-md border border-gray-500 bg-gray-900")

(setq org-tailwind-class-table-body-row "hover:bg-gray-900")

(setq org-tailwind-class-table-last-body-row "border-b-2
border-gray-400 hover:bg-gray-900")

(setq org-tailwind-class-src-window "bg-gray-400 text-gray-700")
#+END_SRC

*** Gitlab alike Theme

#+ATTR_FILENAME: your_config.el
#+BEGIN_SRC elisp
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                                       ;      org-tailwind gitlab theme       ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(setq org-tailwind-headlines "h1,h2,h3")

(setq org-tailwind-class-h1 "mt-32 mb-6 text-4xl text-gray-800
border-b hover:text-blue-500 border-gray-500")

(setq org-tailwind-class-h2 "mt-20 mb-6 text-3xl text-gray-800
border-b hover:text-blue-500 border-gray-500")

(setq org-tailwind-class-h3 "mt-12 mb-6 text-2xl text-gray-800
border-b hover:text-blue-500 border-gray-500")

(setq org-tailwind-class-h4 "mt-8 mb-6 text-xl text-gray-800
border-b hover:text-blue-500 border-gray-500")

(setq org-tailwind-class-h5 "mt-6 mb-6 text-lg text-gray-800
border-b hover:text-blue-500 border-gray-500")

(setq org-tailwind-class-h6 "mt-4 mb-6 text-lg text-gray-800
border-b hover:text-blue-500 border-gray-500")

(setq org-tailwind-class-h7 "mt-2 mb-6 text-base text-gray-800
border-b hover:text-blue-500 border-gray-500")

(setq org-tailwind-class-h8 "mt-1 mb-6 text-base text-gray-800
border-b hover:text-green-500 border-gray-500")

(setq org-tailwind-class-code "px-2 rounded-md text-teal-500
bg-gray-300")

(setq org-tailwind-class-verbatim "px-2 rounded-md text-pink-500
bg-gray-300")

(setq org-tailwind-class-link "text-blue-700 hover:text-blue-800 hover:underline")

(setq org-tailwind-class-body "flex flex-col h-screen
text-gray-800")

(setq org-tailwind-class-file-name "flex rounded-t border \
border-gray-300 bg-gray-100 py-2 pl-4 font-bold")

(setq org-tailwind-class-inner-container "px-20 pb-24 mb-12 border border-gray-300")

(setq org-tailwind-class-header "w-full border-b border-gray-500
bg-purple-900 shadow-md items-center h-16 text-white")

(setq org-tailwind-class-footer "hidden fixed bottom-0 w-full border-t \
border-solid border-gray-500 h-8 text-center bg-gray-900")

(setq org-tailwind-class-sidebar "px-24 py-12 bg-gray-100
lg:border-r-4 lg:border-gray-300 lg:fixed lg:pt-2 lg:w-64 lg:px-2
lg:overflow-y-auto lg:inset-y-0 lg:mt-16")

(setq org-tailwind-class-content-container "flex-grow px-4 py-12 \
sm:px-8 md:px-12 lg:ml-64 lg:px-24 lg:overflow-x-auto xl:px-56")

(setq org-tailwind-class-toc-items "text-sm hover:bg-gray-500")

(setq org-tailwind-class-current-toc "bg-gray-400 border-r-4 border-indigo-900")

(setq org-tailwind-class-search-bar "float-right mx-4 w-1/6 \
rounded-lg px-4 py-1 border-solid border border-purple-900 \
bg-purple-800 text-gray-800 focus:text-white")

(setq org-tailwind-class-search-bar-results-list "z-50 absolute \
w-5/6 sm:w-4/6 md:w-3/6 lg:w-2/6 xl:w-1/6 right-0 mt-12 mr-20 \
bg-white p-4 shadow-lg border border-indigo-700 \
rounded-md text-gray-800")

(setq org-tailwind-class-search-bar-results-item "p-2 block \
rounded hover:bg-gray-500")

(setq org-tailwind-html-template
      "<!doctype html>
<html lang=\"en\">
<head>
  <meta charset=\"utf-8\">
  <title>%s</title>
  %s
</head>
<body class=\"%s\">

<div id=\"header\" class=\"%s\">
%s
</div>

<div id=\"content\" class=\"top %s\" onclick=\"hideResults()\">
  <div id=\"sidebar\" class=\"%s\">
  %s
  </div>

  <div id=\"content-container\" class=\"%s\" onscroll=\"scrollSpy()\">
    <div id=\"top\"></div>
    <div id=\"file-name\" class=\"%s\">
      <img class=\"w-6 h-6 mr-2\" src=\"./icons/folders.png\">
      <p>%s</p>
    </div>
    <div id=\"inner-container\" class=\"%s\">
      %s
    </div>
  </div>
</div>

<div id=\"footer\" class=\"%s\">
%s
</div>

<script>
%s
</script>

%s

</body>
</html>
")

(defun org-tailwind-template (contents info)
  "Format the HTML Template and add the CONTENTS of the export."
  (format org-tailwind-html-template
          (plist-get (org-export-get-environment 'tailwind) :html-title)
          org-tailwind-head-files
          org-tailwind-class-body
          org-tailwind-class-header
          (format org-tailwind-header
                  org-tailwind-class-top-button
                  org-tailwind-class-search-bar
                  org-tailwind-class-search-bar-results-list)
          org-tailwind-class-content
          org-tailwind-class-sidebar
          org-tailwind-sidebar
          org-tailwind-class-content-container
          ;; add the file name before the content box
          org-tailwind-class-file-name
          (plist-get info :input-buffer)
          org-tailwind-class-inner-container
          contents
          org-tailwind-class-footer
          org-tailwind-footer
          ;; Generate TOC Javascript
          (format org-tailwind-javascript
                  org-tailwind-class-top-button
                  org-tailwind-headlines
                  org-tailwind-class-toc-items
                  org-tailwind-class-current-toc
                  org-tailwind-class-search-bar-results-item
                  org-tailwind-class-current-toc)
          org-tailwind-bottom-files))
#+END_SRC

** Elements
*** Markup
**** Text

*Bold Text*

/Italic Text/ 

_Underlined Text_ 

+Strike Through+

=Verbatim=

~Inline code~
    
[[./index.html][HyperLinks]]

**** Lists
***** Ordered List

1. Item number 1
   1. Item number 1.1
   2. Item number 1.2
   3. Item number 1.3
2. Item number 2
3. Item number 3
4. Item number 4
5. Item number 5

***** Unordered List

- Like
  - This
    - One

***** Description List

- Tip Blocks :: Are for displaying tips.
- Warning Blocks :: Are for displaying warnings.
- Danger Blocks :: Are for displaying dangers. 

***** Checkboxes

- [ ] Unchecked 1
- [ ] Unchecked 2
- [X] Checked 1

**** Tables
     
#+NAME: This is an example table and description
| A               | B              |                   C |
|-----------------+----------------+---------------------|
| <l>             | <c>            |                 <r> |
| In this column  | In this        |            Finally, |
| the text        | column         |         in this one |
| is left aligned | it is centered | it is right aligned |
     
**** Images

#+NAME: I don't have words...
[[./files/weird_cat.gif]]

**** Videos

#+NAME: What is this?
[[./files/cat_treats.mp4]]

*** Formulas
Inline formulas: $\sum_{i=0}^n i^2 = \frac{(n^2+n)(2n+1)}{6}$
    
$$\sum_{i=0}^n i^2 = \frac{(n^2+n)(2n+1)}{6}$$

*** Blocks
**** Blockquote

#+NAME: The name of the author
#+begin_quote
Once upon a time..........
#+end_quote

**** Source Blocks

Source code blocks can be downloaded directly from github:

#+ATTR_FILENAME: core.cljs
#+ATTR_HIGHLIGHT: 2,6-8,11-20,48-51
#+ATTR_FETCH: https://api.github.com/repos/vascoferreira25/discord-bot/contents/src/main/core.cljs
#+BEGIN_SRC clojure
#+END_SRC

This uses the following attributes:

#+BEGIN_SRC org
,#+ATTR_FILENAME: core.cljs
,#+ATTR_HIGHLIGHT: 2,6-8,11-20,48-51
,#+ATTR_FETCH: https://api.github.com/repos/vascoferreira25/discord-bot/contents/src/main/core.cljs
#+END_SRC

*** Custom Blocks

There are four custom blocks: ~details~, ~tip~, ~warning~ and ~danger~ and
these blocks can contain other elements. In order to get syntax highlighting
while editing in Emacs, use ~org~ as language.

**** Details

#+begin_details
All the stuff in here will be hidden ....
#+end_details

**** Tip   

#+begin_tip
Tip text.
#+end_tip

**** Warning

#+begin_warning
Warning text.
#+end_warning

**** Danger

#+NAME: Danger Title
#+begin_danger org
These blocks can contain other blocks.
   
Code in a shell?

#+ATTR_USERNAME: org-tailwind
#+ATTR_HOSTNAME: remote.host.com
#+BEGIN_SRC shell
cd c:/emacs/bin/runemacs.exe
(out)I rocks!
#+END_SRC
   
Cool! Isn't it?
#+end_danger

**** Mermaids

There are also mermaids.
   
***** Diagram

#+NAME: A simple diagram.
#+begin_mermaid 
sequenceDiagram
participant Alice
participant Bob
Alice->>John: Hello John, how are you?
loop Healthcheck
John->>John: Fight against hypochondria
end
Note right of John: Rational thoughts <br/>prevail!
John-->>Alice: Great!
John->>Bob: How about you?
Bob-->>John: Jolly good!
#+end_mermaid

***** Gantt Chart

#+NAME: What a beautiful chart. What does it mean?
#+begin_mermaid
gantt
dateFormat  YYYY-MM-DD
title Adding GANTT diagram to mermaid

section A section
Completed task            :done,    des1, 2014-01-06,2014-01-08
Active task               :active,  des2, 2014-01-09, 3d
Future task               :         des3, after des2, 5d
Future task2              :         des4, after des3, 5d

section Critical tasks
Completed task in the critical line :crit, done, 2014-01-06,24h
Implement parser and jison          :crit, done, after des1, 2d
Create tests for parser             :crit, active, 3d
Future task in critical line        :crit, 5d
Create tests for renderer           :2d
Add to mermaid                      :1d

section Documentation
Describe gantt syntax               :active, a1, after des1, 3d
Add gantt diagram to demo page      :after a1  , 20h
Add another diagram to demo page    :doc1, after a1  , 48h

section Last section
Describe gantt syntax               :after doc1, 3d
Add gantt diagram to demo page      : 20h
Add another diagram to demo page    : 48h
#+end_mermaid

**** Custom Attributes

These blocks have custom attributes that you can change:
- Source code ::
  - ~#+ATTR_HIGHLIGHT~ :: lines to highlight in the source code, e.g. ~1,5-10,12~
  - ~#+ATTR_USERNAME~ :: username to show in command-line blocks, e.g. ~CrazyCat~
  - ~#+ATTR_HOSTNAME~ :: hostname to show in command-line blocks, e.g. ~localhost~
  - ~#+ATTR_FETCH~ :: fetch files from the Github API
  - ~#+ATTR_FILEPATH~ :: get files and add a download button, it uses HTTP so, no local files.
  - ~#+ATTR_FILENAME~ :: name to display on the source code window.
- Custom blocks ::
  - ~#+NAME~ :: the title of the block
- Tables ::
  - ~#+NAME~ :: the description of the table or image or video
-  Images and Videos ::
  - ~#+NAME~ :: the description of the table or image or video
- Blockquotes ::
  - ~#+NAME~ :: the name of the author

** Known bugs

- It crashes when it encounters a line that ends in ~\\~ - it works if it is
  inside a block;
- It won't export ~TODO~ keywords and ~SCHEDULE~ dates.
  
