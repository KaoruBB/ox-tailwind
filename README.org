* Org-Tailwind Export Back-End
  
  Hi, this back-end has the purpose of allowing easy customization of the HTML
  output. Although it is called ~Tailwind~, the only thing that it does is
  allowing you to customize the classes of the HTML and exporting a more
  barebones HTML (It does not create as many ~divs~ and ~sections~ as the normal
  HTML export back-end).
  
  Instead of using Tailwind.css you can just name the classes of the elements and
  import your own css (or edit ~./css/styles.css~).

** Installation
   
   To install this back-end, clone this repo into your packages or private
   folder in ~~/.emacs.d~

   #+ATTR_USERNAME: user
   #+ATTR_HOSTNAME: hostname
   #+begin_src shell
git clone https://github.com/vascoferreira25/org-tailwind ~/.emacs.d/private
(out)Cloning into '~/.emacs.d/private'...
(out)remote: Enumerating objects: 49, done.
(out)remote: Counting objects: 100% (49/49), done.
(out)remote: Compressing objects: 100% (40/40), done.
(out)remote: Total 49 (delta 20), reused 28 (delta 8), pack-reused 0
(out)Unpacking objects: 100% (49/49), done.
   #+end_src

   Add the following to your ~config.el~ or ~.spacemacs~ file:

   #+begin_src elisp
  (load-file "~/.emacs.d/private/ox-tailwind/ox-tailwind.el")
   #+end_src

   For Spacemacs, load the file in the user configuration function:

   #+ATTR_HIGHLIGHT: 8
   #+begin_src elisp
(defun dotspacemacs/user-config ()
  "Configuration for user code:
This function is called at the very end of Spacemacs startup, after layer
configuration.
Put your configuration code here, except for variables that should be set
before packages are loaded."
  ;; ...
  (load-file "~/.emacs.d/private/ox-tailwind/ox-tailwind.el")
  ;; ...
  )
   #+end_src

   Then export your org file with the ox-tailwind back-end:

   In Spacemacs you would use ~, e e~ for the export menu and then ~x h~.

** Notes output directory
   
   In order for the export to be functional when offline,
   you need to put the needed files in the output folder.

   The files used in the HTML file are:
   - [[https://prismjs.com/][Prism.js]]
   - [[https://www.mathjax.org/][Mathjax]]
   - [[https://tailwindcss.com/][Tailwind CSS]]

   This is the directory structure of the export folder:
   
   #+ATTR_USERNAME: your-username
   #+ATTR_HOSTNAME: your-hostname
   #+ATTR_HIGHLIGHT: 3-5,15,18,20-23
   #+begin_src ps
tree /F /a
(out)C:/path/to/your_notes/out/
(out)|   # The HTML export
(out)|   index.html
(out)|   
(out)+---css
(out)|       prism.css
(out)|       prism_coy.css
(out)|       prism_default.css
(out)|       prism_okaidia.css
(out)|       prism_solarized_light.css
(out)|       prism_tomorrow.css
(out)|       prism_twilight.css
(out)|       tailwind.min.css
(out)|       style.css # Your css file
(out)|       
(out)+---files
(out)|       # Your attachments
(out)+---img
(out)|       # Your image files
(out)|       spacemacs_1.png
(out)|       spacemacs_2.png
(out)|       
(out)+---js
(out)|       clipboard.min.js
(out)|       mermaid.min.js
(out)|       polyfill.min.js
(out)|       prism.js
(out)|       tex-mml-chtml.js
(out)|       
(out)\---mathjax
(out)    |   # Mathjax Files
   #+end_src

** Elements
*** Markup
**** Text
    *Bold Text*

    /Italic Text/ 

    _Underlined Text_ 

    +Strike Through+

    =Verbatim=

    ~Inline code~
    
    [[./index.html][HyperLinks]]

**** Lists
***** Ordered List
    1. Item number 1
       1. Item number 1.1
       2. Item number 1.2
       3. Item number 1.3
    2. Item number 2
    3. Item number 3
    4. Item number 4
    5. Item number 5

***** Unordered List
    - Like
      - This
        - One

***** Description List
    - Tip Blocks :: Are for displaying tips.
    - Warning Blocks :: Are for displaying warnings.
    - Danger Blocks :: Are for displaying dangers. 

**** Tables
     
     #+NAME: This is an example table and description
     | A | B | C |
     |---+---+---|
     | 1 | 2 | 3 |
     | 4 | 5 | 6 |
     | 7 | 8 | 9 |
     
*** Formulas
    Inline formulas: $\sum_{i=0}^n i^2 = \frac{(n^2+n)(2n+1)}{6}$
    
    $$\sum_{i=0}^n i^2 = \frac{(n^2+n)(2n+1)}{6}$$

*** Blocks
**** Blockquote
    #+begin_quote
    Once upon a time..........
    I forgot the rest.
    #+end_quote

**** Source Blocks

     This block fetches a file from the Github API.
     
     #+ATTR_HIGHLIGHT: 2,6-8,11-20,48-51
     #+ATTR_FETCH: https://api.github.com/repos/vascoferreira25/discord-bot/contents/src/main/core.cljs
     #+BEGIN_SRC clojure
     #+END_SRC
   
*** Custom Blocks
   There are four custom blocks: ~details~, ~tip~, ~warning~ and ~danger~ and
   these blocks can contain other elements. In order to get syntax highlighting
   while editing in Emacs, use ~org~ as language.

**** Details

   #+begin_details
   All the stuff in here will be hidden ....
   #+end_details

**** Tip   

   #+begin_tip
   Tip text.
   #+end_tip

**** Warning

   #+begin_warning
   Warning text.
   #+end_warning

**** Danger

   #+NAME: Danger Title
   #+begin_danger org
   These blocks can contain other blocks.
   
   Code in a shell?

   #+ATTR_USERNAME: org-tailwind
   #+ATTR_HOSTNAME: remote.host.com
   #+BEGIN_SRC shell
cd c:/emacs/bin/runemacs.exe
(out)I rocks!
   #+END_SRC
   
   Cool! Isn't it?
   #+end_danger

**** Custom Attributes
     These blocks have custom attributes that you can specify:
     - Source code ::
       - ~#+ATTR_HIGHLIGHT~: lines to highlight in the source code, e.g. ~1,5-10,12~
       - ~#+ATTR_USERNAME~: username to show in command-line blocks, e.g. ~vascoferreira~
       - ~#+ATTR_HOSTNAME~: hostname to show in command-line blocks, e.g. ~localhost~
       - ~#+ATTR_FETCH~: fetch files from the Github API
       - ~#+ATTR_FILEPATH~: get files and add a download button, it uses HTTP so, no local files.
     - Custom blocks ::
       - ~#+NAME~: the title of the block
     - Tables ::
       - ~#+NAME~: the description of the table

**** Mermaids
    There are also mermaids.
   
***** Diagram

 #+begin_mermaid 
 sequenceDiagram
     participant Alice
     participant Bob
     Alice->>John: Hello John, how are you?
     loop Healthcheck
         John->>John: Fight against hypochondria
     end
     Note right of John: Rational thoughts <br/>prevail!
     John-->>Alice: Great!
     John->>Bob: How about you?
     Bob-->>John: Jolly good!
 #+end_mermaid

***** Gantt Chart

 #+begin_mermaid
 gantt
 dateFormat  YYYY-MM-DD
 title Adding GANTT diagram to mermaid

 section A section
 Completed task            :done,    des1, 2014-01-06,2014-01-08
 Active task               :active,  des2, 2014-01-09, 3d
 Future task               :         des3, after des2, 5d
 Future task2               :         des4, after des3, 5d

 section Critical tasks
 Completed task in the critical line :crit, done, 2014-01-06,24h
 Implement parser and jison          :crit, done, after des1, 2d
 Create tests for parser             :crit, active, 3d
 Future task in critical line        :crit, 5d
 Create tests for renderer           :2d
 Add to mermaid                      :1d

 section Documentation
 Describe gantt syntax               :active, a1, after des1, 3d
 Add gantt diagram to demo page      :after a1  , 20h
 Add another diagram to demo page    :doc1, after a1  , 48h

 section Last section
 Describe gantt syntax               :after doc1, 3d
 Add gantt diagram to demo page      : 20h
 Add another diagram to demo page    : 48h
 #+end_mermaid
     
** Customization
